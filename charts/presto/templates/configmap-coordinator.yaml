apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "presto.coordinator.fullname" . }}
  labels:
    {{- include "presto.coordinator.labels" . | nindent 4 }}
data:
  node.properties: |
    node.environment={{ .Values.presto.node.environment }}
    node.data-dir={{ .Values.presto.node.dataDir }}
    plugin.dir=/usr/lib/presto/plugin
  jvm.config: |
    -server
    -Xmx{{ .Values.presto.jvm.maxHeapSize }}
    -XX:-UseBiasedLocking
    -XX:+{{ .Values.presto.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.presto.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+UseGCOverheadLimit
    -XX:+ExitOnOutOfMemoryError
    -XX:ReservedCodeCacheSize=256M
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000    
  config.properties: |
    coordinator=true
{{- if gt (int .Values.presto.workers) 0 }}
    node-scheduler.include-coordinator=false
{{- else }}
    node-scheduler.include-coordinator=true
{{- end }}
    http-server.http.port={{ .Values.presto.config.http.port }}
    query.max-memory={{ .Values.presto.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.presto.config.query.maxMemoryPerNode }}
    query.max-total-memory-per-node={{ .Values.presto.config.query.maxTotalMemoryPerNode }}
    discovery-server.enabled=true
    discovery.uri=http://{{ template "presto.coordinator.fullname" . }}:{{ .Values.service.port }}
  log.properties: |
    com.facebook.presto={{ .Values.presto.log.presto.level }}
